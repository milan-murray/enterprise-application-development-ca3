@page "/compare-countries/"
@page "/compare-countries/{country1}/{country2}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Compare amount of universities</PageTitle>

<div class="card bg-light text-dark shadow-lg">
    <div class="card-header text-center">
        <h3>Compare the amount of universities between two countries</h3>        
    </div>
    <div class="card-body">
        @if (allUnis1 == null || allUnis2 == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <h4>@Country1: @numResults1</h4>
            <h4>@Country2: @numResults2</h4>
        }
        <p style="display: @InvalidSearch">Country not found</p>
    </div>
</div>

@code {
    [Parameter]
    public String? Country1 { get; set; }

    [Parameter]
    public String? Country2 { get; set; }

    public University[]? allUnis1;
    public University[]? allUnis2;

    String? InvalidSearch { get; set; } = "None";
    String? ValidSearch { get; set; } = "None";

    int? numResults1;
    int? numResults2;

    protected override async Task OnInitializedAsync()
    {
        if (String.IsNullOrWhiteSpace(Country1) || String.IsNullOrWhiteSpace(Country2))
        {
            Console.WriteLine("Invalid parameters");
            InvalidSearch = "";
        }
        else
        {
            ValidSearch = "";
            allUnis1 = await Http.GetFromJsonAsync<University[]>($"http://universities.hipolabs.com/search?country={Country1}");
            allUnis2 = await Http.GetFromJsonAsync<University[]>($"http://universities.hipolabs.com/search?country={Country2}");
            
            numResults1 = allUnis1.Count();
            numResults2 = allUnis2.Count();
            Console.WriteLine($"1: {numResults1}; 2: {numResults2}");
        }
    }

    public class University
    {
        public string? alpha_two_code { get; set; }
        public string? name { get; set; }
        public string? country { get; set; }
        public List<string?>? web_pages { get; set; }
        public string? stateprovince { get; set; }
        public List<string?>? domains { get; set; }
    }
}
